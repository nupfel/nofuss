[
    {
        "id": "f20c1c39.fac8e",
        "type": "tab",
        "label": "Firmware Server",
        "disabled": false,
        "info": ""
    },
    {
        "id": "22e6122a.e60ece",
        "type": "subflow",
        "name": "[COUCH] update device",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 110,
                "wires": [
                    {
                        "id": "f64a987e.ad5818"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 930,
                "y": 110,
                "wires": [
                    {
                        "id": "af59cc2b.b5825",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "1bfad23d.eddf7e",
        "type": "subflow",
        "name": "SPIFFS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 80,
                "wires": [
                    {
                        "id": "ef3e1112.619a9"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 350,
                "y": 80,
                "wires": [
                    {
                        "id": "ef3e1112.619a9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "740009c.6dd24f8",
        "type": "subflow",
        "name": "SKETCH",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 150,
                "wires": [
                    {
                        "id": "63ce5a76.bb8184"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1980,
                "y": 370,
                "wires": [
                    {
                        "id": "66da1bab.bd5114",
                        "port": 0
                    },
                    {
                        "id": "3ecd8ba7.3b1e54",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d669c6f7.c19c38",
        "type": "subflow",
        "name": "delete firmware",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "6fc96f2.36fa29"
                    },
                    {
                        "id": "50cd01c8.52266"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2140,
                "y": 120,
                "wires": [
                    {
                        "id": "59880218.ae1cbc",
                        "port": 0
                    },
                    {
                        "id": "989dc177.76808",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "dcd66a3a.96bec8",
        "type": "subflow",
        "name": "Store MD5 file",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "3d4e071d.38cda8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f7520762.6edde8",
        "type": "subflow",
        "name": "link firmware",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "3057c49f.86c42c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 950,
                "y": 80,
                "wires": [
                    {
                        "id": "7f5a35c7.f01b7c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "967b805d.b1225",
        "type": "subflow",
        "name": "NOFUSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "975d04e8.bd5058"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1340,
                "y": 80,
                "wires": [
                    {
                        "id": "fc2fa388.670fe",
                        "port": 0
                    },
                    {
                        "id": "7ebaa7b5.9288b8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "29c6484d.c891c8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Gill Sans,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "Gill Sans,Geneva,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Gill Sans,Geneva,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ec53b6a8.d2fcb8",
        "type": "cloudantplus",
        "z": "",
        "host": "http://couchdb:5984/",
        "name": "couchdb jail"
    },
    {
        "id": "6074d4b4.5b972c",
        "type": "http in",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 260,
        "wires": [
            [
                "bad4c9c8.087798"
            ]
        ]
    },
    {
        "id": "8d85dc40.6d354",
        "type": "http response",
        "z": "f20c1c39.fac8e",
        "name": "OTA Response",
        "statusCode": "",
        "headers": {},
        "x": 1590,
        "y": 650,
        "wires": []
    },
    {
        "id": "3ecd8ba7.3b1e54",
        "type": "file in",
        "z": "740009c.6dd24f8",
        "name": "Load Firmware",
        "filename": "",
        "format": "",
        "sendError": false,
        "x": 1850,
        "y": 150,
        "wires": [
            []
        ]
    },
    {
        "id": "66da1bab.bd5114",
        "type": "change",
        "z": "740009c.6dd24f8",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3fef58d0.b1da48",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "Forbidden",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forbidden",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 390,
        "wires": [
            [
                "8d85dc40.6d354",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "bad4c9c8.087798",
        "type": "switch",
        "z": "f20c1c39.fac8e",
        "name": "check user-agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NoFussClient",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "351c3bc9.a92f84"
            ],
            [
                "cbd1c30e.48387"
            ],
            [
                "3fef58d0.b1da48"
            ]
        ],
        "outputLabels": [
            "ESP8266-http-Update",
            "NoFussClient",
            ""
        ]
    },
    {
        "id": "da72a6be.b87758",
        "type": "switch",
        "z": "f20c1c39.fac8e",
        "name": "firmware <> fs",
        "property": "req.headers.x-esp8266-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1000,
        "y": 220,
        "wires": [
            [
                "59448f31.4e58c"
            ],
            [
                "2ca08c5a.c642e4"
            ],
            [
                "8c38ca9b.019298"
            ]
        ],
        "outputLabels": [
            "filesystem",
            "firmware",
            "error"
        ]
    },
    {
        "id": "fdbc5c07.c0a4e",
        "type": "http in",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware-manager",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "6a44900b.768fc"
            ]
        ]
    },
    {
        "id": "f4d442ef.77d21",
        "type": "httpInMultipart",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 90,
        "y": 630,
        "wires": [
            [
                "eda969c9.953de8"
            ]
        ]
    },
    {
        "id": "eda969c9.953de8",
        "type": "fs-ops-move",
        "z": "f20c1c39.fac8e",
        "name": "Store firmware",
        "sourcePath": "req.files.firmware[0].destination",
        "sourcePathType": "msg",
        "sourceFilename": "req.files.firmware[0].filename",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "global",
        "destFilename": "req.files.firmware[0].originalname",
        "destFilenameType": "msg",
        "link": false,
        "x": 330,
        "y": 630,
        "wires": [
            [
                "8d85dc40.6d354",
                "7ce6944f.6e8f3c",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "75e882d9.b5626c",
        "type": "md5",
        "z": "dcd66a3a.96bec8",
        "name": "",
        "fieldToHash": "payload",
        "fieldTypeToHash": "msg",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "50fe306a.2dfb7"
            ]
        ]
    },
    {
        "id": "ea7a2ae4.8ca168",
        "type": "file",
        "z": "dcd66a3a.96bec8",
        "name": "store MD5 file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 910,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "590f798d.e22d08",
        "type": "file in",
        "z": "dcd66a3a.96bec8",
        "name": "Read firmware",
        "filename": "",
        "format": "",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "75e882d9.b5626c"
            ]
        ]
    },
    {
        "id": "3d4e071d.38cda8",
        "type": "change",
        "z": "dcd66a3a.96bec8",
        "name": "Extract filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.files.firmware[0].originalname",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "590f798d.e22d08"
            ]
        ]
    },
    {
        "id": "50fe306a.2dfb7",
        "type": "change",
        "z": "dcd66a3a.96bec8",
        "name": "filename.md5",
        "rules": [
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "ea7a2ae4.8ca168"
            ]
        ]
    },
    {
        "id": "165718f8.b7db77",
        "type": "file in",
        "z": "740009c.6dd24f8",
        "name": "Load Hash",
        "filename": "",
        "format": "utf8",
        "sendError": false,
        "x": 1210,
        "y": 150,
        "wires": [
            [
                "16873ea1.45e391"
            ]
        ]
    },
    {
        "id": "16873ea1.45e391",
        "type": "switch",
        "z": "740009c.6dd24f8",
        "name": "MD5 match?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "device.firmware_md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 150,
        "wires": [
            [
                "a3566347.69349"
            ],
            [
                "66da1bab.bd5114"
            ]
        ],
        "outputLabels": [
            "no",
            "yes"
        ]
    },
    {
        "id": "a3566347.69349",
        "type": "change",
        "z": "740009c.6dd24f8",
        "name": "MD5 in header, filename.bin",
        "rules": [
            {
                "t": "set",
                "p": "headers.x-MD5",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "md5",
                "fromt": "str",
                "to": "bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 150,
        "wires": [
            [
                "3ecd8ba7.3b1e54"
            ]
        ]
    },
    {
        "id": "fb97b29c.91d3c",
        "type": "fs-ops-access",
        "z": "740009c.6dd24f8",
        "name": "MD5 file exists?",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 490,
        "y": 150,
        "wires": [
            [
                "165718f8.b7db77"
            ],
            [
                "e93e8252.7bfd9"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "63ce5a76.bb8184",
        "type": "change",
        "z": "740009c.6dd24f8",
        "name": "generate /firmware/[mac].md5",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "device.mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 150,
        "wires": [
            [
                "fb97b29c.91d3c"
            ]
        ]
    },
    {
        "id": "ba72f1da.07319",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "Firmware Upgrade",
        "info": "The system determines which firmware to send based\non the MAC address, version, and MD5 headers in the\nrequest from the ESP8266.\n\nFirstly, it checks if a firmware hash file with \nthe MAC address as the name exists, or else if a \nfirmware file with the version as the name exists.\nIf neither exist then no update is available.\n\nIt then reads the corresponding MD5 hash from the\nhash file and compares to the MD5 hash in the\nrequest.  If they match then the firmware is up\nto date and no update is required.\n\nOtherwise, it sends the contents of the firmware\nbin file and the MD5 hash value.",
        "x": 100,
        "y": 220,
        "wires": []
    },
    {
        "id": "28296796.f4e788",
        "type": "fs-ops-access",
        "z": "740009c.6dd24f8",
        "name": "MD5 file exists?",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "165718f8.b7db77"
            ],
            [
                "66da1bab.bd5114"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "460633a9.75d34c",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "Firmware Management",
        "info": "",
        "x": 110,
        "y": 460,
        "wires": []
    },
    {
        "id": "860a4fd0.c44f8",
        "type": "config",
        "z": "f20c1c39.fac8e",
        "name": "server config",
        "properties": [
            {
                "p": "firmware.directory",
                "pt": "global",
                "to": "/usr/local/node-red/userdata/firmware/",
                "tot": "str"
            },
            {
                "p": "nofuss_headers",
                "pt": "global",
                "to": "{\"x-esp8266-version\":\"firmware_version\",\"x-esp8266-device\":\"device\",\"x-esp8266-build\":\"build\",\"x-esp8266-chipid\":\"chip_id\",\"x-esp8266-chipsize\":\"flash_size\",\"x-esp8266-free-space\":\"free_space\",\"x-esp8266-sketch-size\":\"firmware_size\",\"x-esp8266-sketch-md5\":\"firmware_md5\",\"x-esp8266-sdk-version\":\"sdk_version\",\"x-real-ip\":\"ip\"}",
                "tot": "json"
            },
            {
                "p": "httpupdate_headers",
                "pt": "global",
                "to": "{\"x-esp8266-version\":\"firmware_version\",\"x-esp8266-chip-id\":\"chip_id\",\"x-esp8266-chip-size\":\"flash_size\",\"x-esp8266-free-space\":\"free_space\",\"x-esp8266-sketch-size\":\"firmware_size\",\"x-esp8266-sketch-md5\":\"firmware_md5\",\"x-esp8266-sdk-version\":\"sdk_version\",\"x-real-ip\":\"ip\"}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "e93e8252.7bfd9",
        "type": "change",
        "z": "740009c.6dd24f8",
        "name": "generate /firmware/[device]-[version].md5",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "device.device",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "-",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "device.version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "28296796.f4e788"
            ]
        ]
    },
    {
        "id": "6a44900b.768fc",
        "type": "fs-ops-dir",
        "z": "f20c1c39.fac8e",
        "name": "firmware listing",
        "path": "firmware.directory",
        "pathType": "global",
        "filter": "*.bin",
        "filterType": "str",
        "dir": "payload.files",
        "dirType": "msg",
        "x": 330,
        "y": 500,
        "wires": [
            [
                "ce9c463e.e1cb48"
            ]
        ]
    },
    {
        "id": "891e0a15.3f95c8",
        "type": "template",
        "z": "f20c1c39.fac8e",
        "name": "Firmware Manager",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <title>Firmware Manager</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <style>\n            .file-btn-grp {\n                display: none;\n            }\n            body {\n                background-color: #f6f6f6;\n            }\n            .text_holder {\n                display: block;\n                max-width: 100%;\n                word-wrap: break-word;\n                line-height: 30px;\n            }\n            #main {\n                margin-top: 50px;\n                background-color: #ffffff;\n                border-radius: 5px;\n                width: 70%;\n                min-width: 500px;\n                border: 1px solid #545454;\n            }\n            .alert {\n                margin-top: 10px;\n                margin-bottom: 5px;\n            }\n            .link {\n                font-style: italic;\n            }\n            .listentry {\n                display: none;\n                list-style-type: none;\n            }\n        </style>\n\n    </head>\n    <body>\n        <div class=\"container\" id=\"main\">\n            <h1><small>Firmware Manager</small></h1>\n            <h2><small>Upload New Firmware</small></h2>\n\n            <form role =\"form\" id=\"main_input_box\" action=\"firmware\" method=\"POST\" enctype=\"multipart/form-data\" class=\"form-inline\">\n                <input type=\"file\" accept=\".bin\" class=\"hidden\" id=\"fileUpload\" name=\"firmware\" placeholder=\"firmware.bin\">\n                <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <button id=\"browse\" type=\"button\" class=\"btn btn-primary\">Browse...</button>\n                    </span>\n                    <input id=\"filename\" size=100 readonly=\"\" class=\"form-control\" placeholder=\"Firmware.bin\">\n                    <span class=\"input-group-btn\">\n                        <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary add_button\">\n                    </span>\n                </div>\n                </div>\n            </form>\n\n            <h2><small>Current Firmware</small></h2>\n            <ul class=\"list-group\" id=\"list_of_items\">\n            </ul>\n        </div>\n\n        <div id=\"linkModal\" class=\"modal fade\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n        \n                <!-- Modal content-->\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        <h4 class=\"modal-title\">Create Symbolic Link</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form class=\"form-horizontal\" id=\"linkForm\" role=\"form\" action=\"#\" method=\"POST\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkName\">Link:</label> \n                                <div class=\"col-sm-10\">\n                                    <input id=\"linkName\" name=\"linkName\" class=\"form-control\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkFile\">To:</label> \n                                <div class=\"col-sm-10\">\n                                    <input class=\"form-control\" id=\"linkFile\" name=\"linkFile\"/>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"submit\" class=\"btn btn-success link-create\">Create</button>\n                        <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <script>\n\n            var deleteButton = \"<button id='delete' class='btn btn-warning'>Delete</button>\";\n            var linkButton = \"<button id='link' class='btn btn-success'>Link</button>\";\n            var oneButton = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + \"</div>\";\n            var twoButtons = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + linkButton + \"</div>\";\n            \n            function addListEntry(list, filename, linkname) {\n            \n                var entry;\n                \n                if (linkname === undefined) {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span>\" \n                    + filename + \"</span>\" + twoButtons + \"</div></li>\");\n                } else {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span class='link'>\" \n                    + filename + \"</span> <span class='glyphicon glyphicon-arrow-right'></span> \" \n                    + linkname + oneButton + \"</div></li>\");\n                }\n                \n                entry.mouseover(function(){\n                    $(this).find(\".btn-group\").fadeIn(\"fast\");\n                });\n                entry.mouseleave(function(){\n                    $(this).find(\".btn-group\").fadeOut(\"slow\");\n                });\n                \n                entry.on(\"click\", \"button#delete\", function(){\n                    var listItem = this.parentElement.parentElement.parentElement;\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $.ajax({\n                        url: 'firmware',\n                        type: 'DELETE',\n                        data: {\"filename\": file},\n                        success: function(result) {\n                            location.reload();\n                            // $(listItem).fadeOut(\"slow\", function(){\n                            //     listItem.remove();\n                            // });\n                        },\n                        error: function(result) {\n                            $(listItem).append(\"<div class='alert alert-danger'>\"\n                                + \"<a href='#' class='close' data-dismiss='alert'\"\n                                + \"aria-label='close'>&times;</a>\"\n                                + result.responseText + \"</div>\");\n                        }\n                    });\n                });\n           \n                entry.on(\"click\", \"button#link\", function(){\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $(\"#linkName\").val(\"\");\n                    $(\"#linkFile\").prop(\"disabled\", true).val(file);\n                    $(\"#linkName\").parent().removeClass(\"has-error\");\n                    $(\"#linkModal\").modal();\n                    $('#linkModal').on('shown.bs.modal', function () {\n                        $('#linkName').focus();\n                    });\n                });\n                \n                if (list.children().length == 0) {\n                    list.append(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n\n                if (filename < $(\"li:first span:first\", list).text()) {\n                    $(\"li:first\", list).before(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                if (filename > $(\"li:last span:first\", list).text()) {\n                    $(\"li:last\", list).after(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                \n                var count = 0;\n                var $li = $(\"li\", list);\n                do {\n                    var index = parseInt($li.length / 2);\n                    var $compare = $li.eq(index);\n                    var compare = $(\"span:first\",$compare).text();\n                    if (filename === compare) {\n                        break;\n                    }\n                    else if (filename > compare) {\n                        $li = $li.slice(index, $li.length);\n                    } else {\n                        $li = $li.slice(0, index);\n                    }\n                } while ($li.length > 1);\n\n                if (filename === compare) {\n                    $compare.slideUp(\"fast\").slideDown(\"slow\");\n                    return;\n                } else if (filename < compare) { \n                    entry.insertBefore($compare); \n                } else { \n                    entry.insertAfter($compare); \n                }\n                entry.slideDown(\"slow\");\n            }\n            \n            \n            var files = String(\"{{payload.files}}\").split(',');\n            var links = String(\"{{payload.links}}\").split(',');\n            \n            var list_of_items = $(\"#list_of_items\");\n            \n            files.forEach(function(file,index) {\n                if (links[index] == \"\") {\n                    addListEntry(this, file.slice(0,-4));\n                } else {\n                    addListEntry(this, file.slice(0,-4), links[index].slice(0,-4));\n                }\n            },list_of_items);\n           \n           \n            $(\"#linkModal\").on(\"click\", \"button.link-create\", function(event){\n               event.preventDefault();\n               if ($(\"#linkName\").val() == \"\") {\n                    $('#linkName').focus();\n                    $('#linkName').parent().addClass(\"has-error\");\n                    return false;\n               }\n               $(\"#linkFile\").prop(\"disabled\",false);               \n               $.ajax({\n                    url: 'firmware',\n                    type: 'PUT',\n                    data: $(\"#linkForm\").serialize(),\n                    success: function(result) {\n                        $(\"#linkModal\").modal('hide');\n                        addListEntry(list_of_items, $('#linkName').val(), $('#linkFile').val());\n                    },\n                    error: function(result) {\n                        $(\"#linkFile\").prop(\"disabled\", true);\n                        $('#linkName').focus();\n                        $('#linkName').parent().addClass(\"has-error\");\n                        $(linkForm).append(\"<div id='linkError' class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n                });\n            });\n            \n            $(\"#browse\").on('click', function () {\n                fileUpload.click();\n            });\n            \n            $(\"#fileUpload\").on('change', function () {\n                $(\"#filename\").val($(\"#fileUpload\").val().split('/').pop().split('\\\\').pop());\n            });\n            \n            var frm = $(\"#main_input_box\");\n            \n            frm.submit( function( e ) {\n                e.preventDefault();\n                if ($('#fileUpload').val() == \"\") return null;\n                $.ajax( {\n                    url: frm.attr('action'),\n                    type: frm.attr('method'),\n                    data: new FormData( this ),\n                    processData: false,\n                    contentType: false,\n                    success: function(result) {\n                        addListEntry(list_of_items, $('#fileUpload').val().slice(0,-4).split('\\\\').pop());\n                        $('#fileUpload').val('');\n                        $(':text').val('');\n                    },\n                    error: function(result) {\n                        $(\"#main_input_box\").append(\"<div class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n\n                });\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 680,
        "y": 500,
        "wires": [
            [
                "8d85dc40.6d354"
            ]
        ]
    },
    {
        "id": "485abd56.b852c4",
        "type": "http in",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 760,
        "wires": [
            [
                "2417e629.168a1a"
            ]
        ]
    },
    {
        "id": "2da0f3da.9aa75c",
        "type": "fs-ops-delete",
        "z": "d669c6f7.c19c38",
        "name": "Delete firmware",
        "path": "firmware.directory",
        "pathType": "global",
        "filename": "filename",
        "filenameType": "msg",
        "x": 580,
        "y": 120,
        "wires": [
            [
                "f0b262cc.fff67"
            ]
        ]
    },
    {
        "id": "2146ce8a.581f12",
        "type": "catch",
        "z": "f20c1c39.fac8e",
        "name": "File Error",
        "scope": [
            "eda969c9.953de8",
            "6a44900b.768fc",
            "ce9c463e.e1cb48",
            "59448f31.4e58c",
            "2ca08c5a.c642e4",
            "2417e629.168a1a",
            "7ce6944f.6e8f3c",
            "60a706b2.f45948",
            "de30cdb8.6b13a",
            "9a8fa47d.628fb8"
        ],
        "uncaught": false,
        "x": 70,
        "y": 1060,
        "wires": [
            [
                "63e33ede.a628a",
                "4874a953.321828"
            ]
        ]
    },
    {
        "id": "63e33ede.a628a",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "8d85dc40.6d354"
            ]
        ]
    },
    {
        "id": "df866a4.aef0198",
        "type": "fs-ops-move",
        "z": "f7520762.6edde8",
        "name": "Link firmware",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "global",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 390,
        "y": 80,
        "wires": [
            [
                "acba05dc.872678"
            ]
        ]
    },
    {
        "id": "72f41058.f353b",
        "type": "http in",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 900,
        "wires": [
            [
                "60a706b2.f45948"
            ]
        ]
    },
    {
        "id": "3057c49f.86c42c",
        "type": "change",
        "z": "f7520762.6edde8",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "df866a4.aef0198"
            ]
        ]
    },
    {
        "id": "acba05dc.872678",
        "type": "change",
        "z": "f7520762.6edde8",
        "name": "Change to MD5 Filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 80,
        "wires": [
            [
                "7f5a35c7.f01b7c"
            ]
        ]
    },
    {
        "id": "7f5a35c7.f01b7c",
        "type": "fs-ops-move",
        "z": "f7520762.6edde8",
        "name": "Link MD5",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "global",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 810,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ce9c463e.e1cb48",
        "type": "fs-ops-link",
        "z": "f20c1c39.fac8e",
        "name": "Get Links",
        "path": "firmware.directory",
        "pathType": "global",
        "filename": "payload.files",
        "filenameType": "msg",
        "link": "payload.links",
        "linkType": "msg",
        "x": 500,
        "y": 500,
        "wires": [
            [
                "891e0a15.3f95c8"
            ]
        ]
    },
    {
        "id": "ac901f4f.e5136",
        "type": "debug",
        "z": "740009c.6dd24f8",
        "name": "Firmware file error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "x": 1600,
        "y": 300,
        "wires": []
    },
    {
        "id": "ff7a6246.8531d",
        "type": "catch",
        "z": "740009c.6dd24f8",
        "name": "File error",
        "scope": [
            "165718f8.b7db77",
            "3ecd8ba7.3b1e54"
        ],
        "uncaught": false,
        "x": 1380,
        "y": 300,
        "wires": [
            [
                "ac901f4f.e5136",
                "66da1bab.bd5114"
            ]
        ]
    },
    {
        "id": "ad2b0ae0.983e38",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "upload firmware",
        "info": "",
        "x": 90,
        "y": 590,
        "wires": []
    },
    {
        "id": "4f8c1486.ce7a9c",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "delete firmware",
        "info": "",
        "x": 90,
        "y": 720,
        "wires": []
    },
    {
        "id": "b353c513.1bb778",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "link firmware",
        "info": "",
        "x": 80,
        "y": 860,
        "wires": []
    },
    {
        "id": "dc1bbc98.795d3",
        "type": "catch",
        "z": "f20c1c39.fac8e",
        "name": "catch remaining errors",
        "scope": null,
        "uncaught": true,
        "x": 110,
        "y": 1100,
        "wires": [
            [
                "4874a953.321828"
            ]
        ]
    },
    {
        "id": "4874a953.321828",
        "type": "debug",
        "z": "f20c1c39.fac8e",
        "name": "debug error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 440,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8c38ca9b.019298",
        "type": "debug",
        "z": "f20c1c39.fac8e",
        "name": "wrong mode header",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.headers",
        "targetType": "msg",
        "x": 1290,
        "y": 280,
        "wires": []
    },
    {
        "id": "ffc522f8.106b9",
        "type": "complete",
        "z": "f20c1c39.fac8e",
        "name": "",
        "scope": [
            "8d85dc40.6d354"
        ],
        "uncaught": false,
        "x": 80,
        "y": 140,
        "wires": [
            [
                "c1a4bd43.34497"
            ]
        ]
    },
    {
        "id": "f599e771.b62aa8",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "logging",
        "info": "",
        "x": 60,
        "y": 100,
        "wires": []
    },
    {
        "id": "c1a4bd43.34497",
        "type": "debug",
        "z": "f20c1c39.fac8e",
        "name": "debug logging",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 310,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4eba04b.a8d6f",
        "type": "fs-ops-link",
        "z": "d669c6f7.c19c38",
        "name": "get links",
        "path": "firmware.directory",
        "pathType": "global",
        "filename": "file.list",
        "filenameType": "msg",
        "link": "payload",
        "linkType": "msg",
        "x": 990,
        "y": 120,
        "wires": [
            [
                "af3d76d4.d9ec68"
            ]
        ]
    },
    {
        "id": "f0b262cc.fff67",
        "type": "fs-ops-dir",
        "z": "d669c6f7.c19c38",
        "name": "firmware listing",
        "path": "firmware.directory",
        "pathType": "global",
        "filter": "",
        "filterType": "str",
        "dir": "file.list",
        "dirType": "msg",
        "x": 820,
        "y": 120,
        "wires": [
            [
                "a4eba04b.a8d6f"
            ]
        ]
    },
    {
        "id": "aef149d1.08f578",
        "type": "join",
        "z": "d669c6f7.c19c38",
        "name": "collect filenames",
        "mode": "custom",
        "build": "array",
        "property": "filename",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "2da0f3da.9aa75c"
            ]
        ]
    },
    {
        "id": "af3d76d4.d9ec68",
        "type": "split",
        "z": "d669c6f7.c19c38",
        "name": "foreach link",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1150,
        "y": 120,
        "wires": [
            [
                "a3f6618d.b6b2d"
            ]
        ]
    },
    {
        "id": "cd79af58.422f3",
        "type": "comment",
        "z": "d669c6f7.c19c38",
        "name": "delete links to firmware",
        "info": "",
        "x": 840,
        "y": 80,
        "wires": []
    },
    {
        "id": "a3f6618d.b6b2d",
        "type": "switch",
        "z": "d669c6f7.c19c38",
        "name": "filter links to deleted firmware",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "filename[0]",
                "vt": "msg"
            },
            {
                "t": "eq",
                "v": "filename[1]",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1370,
        "y": 120,
        "wires": [
            [
                "9aa8c309.c39cb"
            ],
            [
                "9aa8c309.c39cb"
            ],
            [
                "989dc177.76808"
            ]
        ],
        "outputLabels": [
            ".bin",
            ".md5",
            ""
        ]
    },
    {
        "id": "6353e91b.ae3ee8",
        "type": "join",
        "z": "d669c6f7.c19c38",
        "name": "gather links",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1810,
        "y": 120,
        "wires": [
            [
                "59880218.ae1cbc"
            ]
        ]
    },
    {
        "id": "9aa8c309.c39cb",
        "type": "change",
        "z": "d669c6f7.c19c38",
        "name": "link => filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t$i := parts.index;\tfile.list[$i]\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 120,
        "wires": [
            [
                "6353e91b.ae3ee8"
            ]
        ]
    },
    {
        "id": "59880218.ae1cbc",
        "type": "fs-ops-delete",
        "z": "d669c6f7.c19c38",
        "name": "delete links",
        "path": "firmware.directory",
        "pathType": "global",
        "filename": "payload",
        "filenameType": "msg",
        "x": 1980,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "af59cc2b.b5825",
        "type": "cloudantplus out",
        "z": "22e6122a.e60ece",
        "name": "store headers",
        "cloudant": "ec53b6a8.d2fcb8",
        "database": "iot",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 780,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "1a87d38a.01287c",
        "type": "cloudantplus in",
        "z": "22e6122a.e60ece",
        "name": "get latest revision",
        "cloudant": "ec53b6a8.d2fcb8",
        "database": "iot",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 370,
        "y": 110,
        "wires": [
            [
                "65febd57.cc0734"
            ]
        ]
    },
    {
        "id": "2b315f75.119fc",
        "type": "subflow:22e6122a.e60ece",
        "z": "f20c1c39.fac8e",
        "name": "update couchdb",
        "env": [],
        "x": 1000,
        "y": 170,
        "wires": [
            []
        ]
    },
    {
        "id": "ef3e1112.619a9",
        "type": "change",
        "z": "1bfad23d.eddf7e",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "59448f31.4e58c",
        "type": "subflow:1bfad23d.eddf7e",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 1350,
        "y": 200,
        "wires": [
            [
                "8d85dc40.6d354",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "2ca08c5a.c642e4",
        "type": "subflow:740009c.6dd24f8",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 1350,
        "y": 240,
        "wires": [
            [
                "8d85dc40.6d354",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "2417e629.168a1a",
        "type": "subflow:d669c6f7.c19c38",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "8d85dc40.6d354",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "50cd01c8.52266",
        "type": "change",
        "z": "d669c6f7.c19c38",
        "name": "filename.md5",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload.filename",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "aef149d1.08f578"
            ]
        ]
    },
    {
        "id": "6fc96f2.36fa29",
        "type": "change",
        "z": "d669c6f7.c19c38",
        "name": "filename.bin",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload.filename",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "aef149d1.08f578"
            ]
        ]
    },
    {
        "id": "7ce6944f.6e8f3c",
        "type": "subflow:dcd66a3a.96bec8",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 510,
        "y": 660,
        "wires": []
    },
    {
        "id": "60a706b2.f45948",
        "type": "subflow:f7520762.6edde8",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 320,
        "y": 900,
        "wires": [
            [
                "8d85dc40.6d354",
                "231fb994.164cb6"
            ]
        ]
    },
    {
        "id": "51d1267d.cb2538",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "error handling",
        "info": "",
        "x": 80,
        "y": 1020,
        "wires": []
    },
    {
        "id": "231fb994.164cb6",
        "type": "debug",
        "z": "f20c1c39.fac8e",
        "name": "access log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "$join(\t   [\t       req.method,\t       req.url,\t       req.headers.\"x-real-ip\",\t       device.mac,\t       device.device,\t       device.firmware_version,\t       device.build,\t       $string(payload)\t   ],\t   \" \"\t)",
        "targetType": "jsonata",
        "x": 1590,
        "y": 600,
        "wires": []
    },
    {
        "id": "989dc177.76808",
        "type": "join",
        "z": "d669c6f7.c19c38",
        "name": "not matching",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1810,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f64a987e.ad5818",
        "type": "change",
        "z": "22e6122a.e60ece",
        "name": "_id = MAC",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "device.mac",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "device._id",
                "pt": "msg",
                "to": "device.mac",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "device.type",
                "pt": "msg",
                "to": "device",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 110,
        "wires": [
            [
                "1a87d38a.01287c"
            ]
        ]
    },
    {
        "id": "ddb2d63f.f7c358",
        "type": "function",
        "z": "f20c1c39.fac8e",
        "name": "httpupdate_headers",
        "func": "let mapping = global.get(node.name);\nlet headers = Object.keys(mapping);\n\nif (headers.every(function(header) {\n    return header in msg.req.headers;\n})) {\n    // convert ESP headers to msg.device object for later use\n    headers.forEach((header) => {\n        let value = msg.req.headers[header].trim();\n        if (!value.length || isNaN(value)) {\n            msg.device[mapping[header]] = value;\n        }\n        else {\n            msg.device[mapping[header]] = parseInt(value, 10);\n        }\n    })\n    return [msg, null];\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 710,
        "y": 220,
        "wires": [
            [
                "2b315f75.119fc",
                "da72a6be.b87758"
            ],
            [
                "3fef58d0.b1da48",
                "86badf60.c0631"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "86badf60.c0631",
        "type": "debug",
        "z": "f20c1c39.fac8e",
        "name": "unsupported headers",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "req.headers",
        "targetType": "msg",
        "x": 1030,
        "y": 350,
        "wires": []
    },
    {
        "id": "65febd57.cc0734",
        "type": "function",
        "z": "22e6122a.e60ece",
        "name": "update device",
        "func": "if (msg.payload === null) msg.payload = {};\nmsg.device = Object.assign(msg.payload, msg.device);\npayload = msg.device;\npayload.timestamp = Date.now();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 110,
        "wires": [
            [
                "af59cc2b.b5825"
            ]
        ]
    },
    {
        "id": "b1c7a44a.0bd928",
        "type": "subflow:967b805d.b1225",
        "z": "f20c1c39.fac8e",
        "name": "",
        "env": [],
        "x": 1040,
        "y": 300,
        "wires": [
            [
                "231fb994.164cb6",
                "8d85dc40.6d354"
            ]
        ]
    },
    {
        "id": "351c3bc9.a92f84",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "lowercase MAC",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "device.mac",
                "pt": "msg",
                "to": "$lowercase(req.headers.\"x-esp8266-sta-mac\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "device.ap_mac",
                "pt": "msg",
                "to": "$lowercase(req.headers.\"x-esp8266-ap-mac\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "ddb2d63f.f7c358"
            ]
        ]
    },
    {
        "id": "cbd1c30e.48387",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "lowercase MAC",
        "rules": [
            {
                "t": "set",
                "p": "device",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "device.mac",
                "pt": "msg",
                "to": "$lowercase(req.headers.\"x-esp8266-mac\")",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "device.ap_mac",
                "pt": "msg",
                "to": "$lowercase(req.headers.\"x-esp8266-ap-mac\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "d0382119.640eb"
            ]
        ]
    },
    {
        "id": "d0382119.640eb",
        "type": "function",
        "z": "f20c1c39.fac8e",
        "name": "nofuss_headers",
        "func": "let mapping = global.get(node.name);\nlet headers = Object.keys(mapping);\n\nif (headers.every(function(header) {\n    return header in msg.req.headers;\n})) {\n    // convert ESP headers to msg.device object for later use\n    headers.forEach((header) => {\n        let value = msg.req.headers[header].trim();\n        if (!value.length || isNaN(value)) {\n            msg.device[mapping[header]] = value;\n        }\n        else {\n            msg.device[mapping[header]] = parseInt(value, 10);\n        }\n    })\n    return [msg, null];\n}\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 730,
        "y": 260,
        "wires": [
            [
                "2b315f75.119fc",
                "b1c7a44a.0bd928"
            ],
            [
                "86badf60.c0631",
                "3fef58d0.b1da48"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "36d44503.b7a77a",
        "type": "cloudantplus in",
        "z": "967b805d.b1225",
        "name": "lookup firmware",
        "cloudant": "ec53b6a8.d2fcb8",
        "database": "iot",
        "service": "_ext_",
        "search": "_view_",
        "design": "firmware",
        "index": "version",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "80b99662.7afaa8"
            ]
        ]
    },
    {
        "id": "59b6cb2b.16f674",
        "type": "comment",
        "z": "f20c1c39.fac8e",
        "name": "serve static files",
        "info": "",
        "x": 90,
        "y": 350,
        "wires": []
    },
    {
        "id": "f73cb7c6.645c28",
        "type": "http in",
        "z": "f20c1c39.fac8e",
        "name": "",
        "url": "/firmware/:filename",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 390,
        "wires": [
            [
                "7f947674.ed8cc8"
            ]
        ]
    },
    {
        "id": "de30cdb8.6b13a",
        "type": "file in",
        "z": "f20c1c39.fac8e",
        "name": "load file",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 660,
        "y": 370,
        "wires": [
            [
                "231fb994.164cb6",
                "8d85dc40.6d354"
            ]
        ]
    },
    {
        "id": "7f947674.ed8cc8",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "generate filename on disk",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.params.filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 390,
        "wires": [
            [
                "9a8fa47d.628fb8"
            ]
        ]
    },
    {
        "id": "9a8fa47d.628fb8",
        "type": "fs-ops-access",
        "z": "f20c1c39.fac8e",
        "name": "exists?",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 520,
        "y": 390,
        "wires": [
            [
                "de30cdb8.6b13a"
            ],
            [
                "5696ca02.363c94"
            ]
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    },
    {
        "id": "5696ca02.363c94",
        "type": "change",
        "z": "f20c1c39.fac8e",
        "name": "404",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "404",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "\"file not found: \" & filename",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 420,
        "wires": [
            [
                "231fb994.164cb6",
                "8d85dc40.6d354"
            ]
        ]
    },
    {
        "id": "975d04e8.bd5058",
        "type": "change",
        "z": "967b805d.b1225",
        "name": "query: key = device, limit = 1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"limit\": 1,\t   \"startkey\": [\t       device.device,\t       \"a\",\t       device.build\t   ],\t   \"endkey\": [\t       device.device,\t       device.firmware_version,\t       device.build\t   ],\t   \"descending\": true\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "36d44503.b7a77a"
            ]
        ]
    },
    {
        "id": "80b99662.7afaa8",
        "type": "change",
        "z": "967b805d.b1225",
        "name": "extract first match",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "7ebaa7b5.9288b8"
            ]
        ]
    },
    {
        "id": "fc2fa388.670fe",
        "type": "change",
        "z": "967b805d.b1225",
        "name": "no update required",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 50,
        "wires": [
            []
        ]
    },
    {
        "id": "7ebaa7b5.9288b8",
        "type": "switch",
        "z": "967b805d.b1225",
        "name": "latest version?",
        "property": "payload.version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device.firmware_version",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 80,
        "wires": [
            [
                "fc2fa388.670fe"
            ],
            []
        ],
        "outputLabels": [
            "yes",
            "no"
        ]
    }
]
